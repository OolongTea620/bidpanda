name: Java CI with Gradle

on:
  push:
    branches: [ "deploy-practice-4" ]
env:
  S3_BUCKET_NAME: hyelin-ali-deploy
  RESOURCE_PATH: ./src/main/resources/application.yaml
  CODE_DEPLOY_APPLICATION_NAME: bidpanda-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: bidpanda-deploy-cicd

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: deploy-practice-4로 이동
      - usse: git checkout deploy-practice-4

      - name: need comment
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      #  gradle 빌드, 테스트 제외하고 실행
      - name: Build with Gradle
        run : ./gradlew clean build -x test
          # 전송할 파일을 담을 디렉토리 생성

      - name: Make Directory for deliver
        run: mkdir deploy

        # Jar 파일 Copy
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy/

        # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r -qq -j ./springboot-intro-build.zip ./deploy

        # S3 Bucket으로 copy
      - name: Deliver to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: aws s3 cp --region ap-northeast-2 --acl private ./springboot-intro-build.zip s3://$S3_BUCKET_NAME/

        # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name ${{env.CODE_DEPLOY_APPLICATION_NAME}} \
          --deployment-group-name ${{env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME}} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=springboot-intro-build.zip \
          --region ap-northeast-2