name: Java CI with Gradle

on:
  push:
    branches: [ "deploy-practice-cicd" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
#      with:
#        arguments: build

    #  gradle 빌드, 테스트 제외하고 실행
    - name: gradle build
      run : ./gradlew clean build -x test
        # 전송할 파일을 담을 디렉토리 생성
        
    - name: Make Directory for deliver
      run: mkdir deploy

      # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/

      # 압축파일 형태로 전달
    - name: Make zip file
      run: zip -r -qq -j ./springboot-intro-build.zip ./deploy

      # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: aws s3 cp --region ap-northeast-2 --acl private ./springboot-intro-build.zip s3://hyelin-ali-deploy/

      # Deploy
    - name: Deploy
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
       aws deploy create-deployment \
       --application-name springboot-intro \
       --deployment-group-name bidpanda-deploy \
       --file-exists-behavior OVERWRITE \
       --s3-location bucket=hyelin-ali-deploy,bundleType=zip,key=springboot-intro-build.zip \
       --region ap-northeast-2